hostip: localhost


##    mybatis-plus
mybatis-plus:
  # 搜索指定包别名
  typeAliasesPackage: com.mylog.*.entity
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapper-locations: classpath:/mapper/*.xml
  # 加载全局的配置文件
  #  configLocation: classpath:mybatis/mybatis-config.xml
  #配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新
  executor-type: SIMPLE
  configuration:
    # 使用驼峰命名法转换字段
    map-underscore-to-camel-case: false
    #二级缓存
    cache-enabled: false
    #指定 MyBatis 所用日志的具体实现
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
    #结果为空时是否返回null
    call-setters-on-nulls: true
  global-config:
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: auto
#    banner: false




# 全局log
logging:
  level:
    com.mylog.*: debug
    org.springframework: warn
    com.mylog.system.dao: debug



# 数据源配置
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      url: jdbc:mysql://${hostip}:3306/mylog?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=Asia/Shanghai
      username: root
      password: root
        # 初始连接数
      initialSize: 5
        # 最小连接池数量
      minIdle: 10
        # 最大连接池数量
      maxActive: 20
        # 配置获取连接等待超时的时间
      maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
        # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
        # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
          # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
          # 控制台管理用户名和密码
        login-username: mylog
        login-password: 123456
      filter:
        stat:
          enabled: true
            # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

#redis
  redis:
#    服务地址
    host: ${hostip}
#    端口号
    port: 6379
#    数据库索引
    database: 0
#    连接超时时间
    timeout: 10s
    # Redis服务器连接密码（默认为空）
    password: 123456789
#    password:
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0


  # nacos
  cloud:
    nacos:
      discovery:
        port: 8848
        username: nacos
        password: nacos
      server-addr: ${hostip}
  application:
    name: mylog-service

#es
  elasticsearch:
    uris: http://${hostip}:9200
    username: elastic
    password: 123456789



#sa-token
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: mylog-token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 是否尝试从 cookie 里读取 Token，此值为 false 后，StpUtil.login(id) 登录时也不会再往前端注入Cookie
  isReadCookie: false

mylog:
  name: mylog
  version: 1.0.0
  copyrightYear: 2025
  demoEnabled: false
  profile: http://localhost:7333
  addressEnabled: false
  captchaType: char

# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.mylog.controller

# miniIO
minio:
  config:
    url: http://${hostip}:9000 #ip地址
    accessKey: root #  账号
    secretKey: 123456789 #  密码
    secure: false #如果是true，则用的是https而不是http,默认值是true
    bucketName: "mylog"  # 桶的名字 相当于文件夹